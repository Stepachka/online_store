name: NestJS Server CI

on:
  push:
    branches: [main, develop]
    paths:
      - "server/**"
      - ".github/workflows/server-ci.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "server/**"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "server/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/test_db"

      - name: Run database migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/test_db"

      - name: Build application
        run: npm run build

      - name: Run tests
        run: npm test -- --coverage --passWithNoTests
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/test_db"
          NODE_ENV: test

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: server-coverage-report
          path: server/coverage/
          if-no-files-found: ignore
